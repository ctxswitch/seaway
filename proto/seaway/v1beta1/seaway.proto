syntax = "proto3";

package seaway.v1beta1;

option go_package = "ctx.sh/seaway/pkg/gen/seaway/v1beta1;seawayv1beta1";

message UploadRequest {
  oneof payload {
    ArtifactInfo artifact_info = 1;
    bytes chunk = 2;
  }
}

message ArtifactInfo {
  string name = 1;
  string namespace = 2;
  string etag = 3;
}

message UploadResponse {
  string key = 1;
  string etag = 2;
  int64 size = 3;
  string message = 4;
  int64 error_code = 5;
}

message EnvironmentRequest {
  string etag = 1;
  string kind = 2;
  string name = 3;
  string namespace = 4;
}

message EnvironmentResponse {
  string status = 1;
  string stage = 2;
}

service SeawayService {
  rpc Upload(stream UploadRequest) returns (UploadResponse) {}
  rpc Environment(EnvironmentRequest) returns (EnvironmentResponse) {}
  rpc EnvironmentTracker(EnvironmentRequest) returns (stream EnvironmentResponse) {}
}
