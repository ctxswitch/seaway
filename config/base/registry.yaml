# TODO: Move this to it's own and out of base that way we can offer install options based on the use.
apiVersion: v1
kind: PersistentVolume
metadata:
  name: shared-registry
spec:
  accessModes:
  - ReadWriteMany
  capacity:
    storage: 10Gi
  hostPath:
    path: /app/tmp/data/registry
  persistentVolumeReclaimPolicy: Delete
  storageClassName: manual
  volumeMode: Filesystem
---
apiVersion: v1
kind: Service
metadata:
  name: registry-hl
  namespace: seaway-system
spec:
  ports:
  - name: api
    port: 5000
  clusterIP: None
  selector:
    app: seaway-registry
---
apiVersion: v1
kind: Service
metadata:
  name: registry
  namespace: seaway-system
spec:
  type: NodePort
  ports:
  - name: api
    port: 5000
    targetPort: 5000
    nodePort: 31555
  selector:
    app: seaway-registry
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: registry
  namespace: seaway-system
spec:
  replicas: 1
  selector:
    matchLabels:
      app: seaway-registry
  serviceName: registry
  template:
    metadata:
      labels:
        app: seaway-registry
    spec:
      containers:
      - name: registry
        image: registry:2
        ports:
        - containerPort: 5000
        volumeMounts:
        - mountPath: /var/lib/registry
          name: shared-registry
  persistentVolumeClaimRetentionPolicy:
    whenDeleted: Delete
    whenScaled: Retain
  volumeClaimTemplates:
  - metadata:
      name: shared-registry
    spec:
      # Consider ReadOnlyMany and have a single write endpoint.  Not sure if this is possible
      # as once you open ReadOnlyMany I don't think you can have a single mounting it as
      # ReadWriteOnce.  There might be a <*>Pod access mode.
      accessModes: [ReadWriteMany]
      resources:
        requests:
          storage: 10Gi
      storageClassName: manual
      volumeMode: Filesystem
