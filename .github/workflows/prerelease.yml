on:
  push:
    tags:
      - 'v*.*.*-*'
name: Build and Release Prereleases
jobs:
  build-and-create-release:
    name: release
    runs-on: ubuntu-latest
    steps:
      ###
      ### Setup the environment
      ###
      - uses: actions/checkout@v4
      - uses: actions/setup-go@v5
        with:
          go-version: "1.22.x"
      - name: setup qemu
        uses: docker/setup-qemu-action@v3
      - name: setup buildx
        uses: docker/setup-buildx-action@v3
      - name: login to dockerhub
        uses: docker/login-action@v3
        with:
          username: ${{ vars.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      ###
      ### Build release packages
      ###
      # - name: build linux/amd64 release artifact
      #   run: make build-seactl-release
      #   env:
      #     SYSTEM: linux
      #     ARCH: amd64
      # - name: build linux/arm64 release artifact
      #   run: make build-seactl-release
      #   env:
      #     SYSTEM: linux
      #     ARCH: arm64
      # - name: build darwin/arm64 release artifact
      #   run: make build-seactl-release
      #   env:
      #     SYSTEM: darwin
      #     ARCH: arm64
      # - name: build darwin/amd64 release artifact
      #   run: make build-seactl-release
      #   env:
      #     SYSTEM: darwin
      #     ARCH: amd64

      ###
      ### Release seactl and seaway binaries
      ###
      # - name: release
      #   uses: softprops/action-gh-release@v2
      #   id: create_release
      #   with:
      #     draft: false
      #     prerelease: false
      #     name: ${{ github.ref.name }}
      #     tag_name: ${{ github.ref.name }}
      #     body_path: RELEASE.md
      #     files: |
      #       ./dist/sea*.tar.gz

      ###
      ### Release the seaway controller container
      ###
      - name: docker meta
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: |
            ctxsh/seaway
          tags: |
            type=semver,pattern={{version}}
      - name: build and push to dockerhub
        uses: docker/build-push-action@v6
        with:
          platforms: linux/amd64,linux/arm64
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          build-args: |
            VERSION_OVERRIDE=${{ steps.meta.outputs.version }}
